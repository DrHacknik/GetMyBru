<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABFCQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAACQxJ
        REFUeJzt3VuoZmUdgPFHmwoqi7oSSoOkRIgK9SIlYllWZJDEwglLLwrsoogyqAVRQeSFK8MOZFiRJhLV
        TCs7eFM6uaZMISdFCtI8ROYhIhrPo+Nhd/Ftaxx19rf1e9f/fdf7/GDfvus/s7/32fvb3zqAJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEnayEHRAyxrHPpTgG3Rc0hL2g3c
        D9wE3ABcCVzRtN0/Q6fajwGQpvM4sBP4PvCjpu32xo4DB0cPIFXkYOAE4CLg5nHoPzoO/fOiB5I0vcOA
        84Bd49AfEzWEAZBivQm4ahz6T0Qc3ABI8V4AfG0c+gvGod8y5YENgJSPDwEXjkM/2b40AFJeTgO+MtXB
        DICUnzPHoT9tigMZAClP3xqH/tWpD2IApDwdAnw99UEMgJSvk8ehb1IewABIeftcysUNgJS3t49D//pU
        ixsAKX8fTLWwAZDyd3KqhQ2AlL+jxqF/ZYqFDYBUhqNTLGoApDIcmWJRAyCV4fAUixoAqQyHpFh00muP
        pQxtTbDmp4A3r3jNF694PcAAqHJN221f9ZrrN7BddQCS8C2AVDEDIFXMAEgVMwBSxQxAfm5l8cSmKb9U
        KQOQnyOiB1A9DIBUMQMgVcwASBUzAFLFDIBUMQMgVcwASBUzAFLFDIBUMQMgVcwASBUzAFLFDIBUMQMg
        VcwASBUzAFLFDIBUMQMgVcwASBUzAFLFDIBUMQMgVcwASBUzAFLFfDy4qjYO/bYEyx6XYM3HEqxpAFS9
        U6IHWNJ9KRb1LYBUhrtTLGoAVmOVD/SM4ING83dzikUNwGq8JnqATKxFDzBjN6RY1ACszhrQRQ8RyM2f
        zsPANSkWNgCrdTZwTPQQAdz8af2+abs9KRY2AKu3K3qAibn50/txqoUNQBprwGXRQ0zAzZ/eHmB7qsUN
        QDonRg+QmJt/Gt9p2m53qsUNQFpz3SRz/Xfl5gHgnJQHMADpzW2zzO3fk7Ozmra7I+UBDMA05vI3ATf/
        dK4Fzk19EAMwndL/JuDmn849wNam7famPpABmFapvwm4+afzCIvNf8sUBzMA0zuRss4YdPNPZy9watN2
        v57qgAYgxtnRAyzJzT+de4CTmrYbpjyoAYizRt7Xorv5p3MdcGzTdjumPrABiLWNPN8OuPmn8SDwReC4
        pu2SXO67Ee8IFO9soI8eYh9u/vQeBL4LnJP6c/6NGIA8rAHHAn/MYA6l8RBwFYsLe7anPL13MwxAPnYR
        e0edWjd/qgttdrP4w94twF+Aa1Jd0vtcGIC8rBETgVo3P03bbY2eIZJ/BMzP1Jux2s0vA5CrNeDbEx1H
        FTMA+fpI4vXd/DIAmUu1Sd38AgxACVZ9t2E3v/7HAJRhVdcOuPn1JAagHM9187r59RQGoCzP9gIiN7+e
        lgEoz2YfZ+3m1zMyAGVadlO7+XVABqBcG21uN782ZADK9kyb3M2vpRiA8u2/2d38WpoBmIcnPh1w82tT
        DMB8bPbTAckASDUzAFLFDIBUMQMgVcwASBUzAFLFDIBUMQOwGpezuJ23XyqKAViNd0QPkBEjUBADIFXM
        AEgVMwBSxQyAVDEDIFXMAEgVKykA3uxCq1b9a6qkADwYPYCW8vLoATah+tdUSQG4P3qAA6j+J8k+/hM9
        wCbcGz1AtC3RA2zCfdEDbMAIlCf311RyJf0GUP03SytX/WuqpADchT9ltVp3RQ8QrZgANG33AHBn9Bya
        lRujB4hWTADWVf8N00pV/3oyAKpZ9a+n0gJwffQAmo3HgT9HDxGttACM0QNoNq5v2q6kcxaSKCoATdvd
        CNwRPYdm4TfRA+SgqACsuyJ6AM2CAaDMAPwqegAVbw/w2+ghclBiAC4h7+sClL+fNW3na4gCA7B+QtAl
        0XOoaBdHD5CL4gKwzm+gnq1/AZdFD5GLUgOwA7g5eggV6YKm7R6NHiIXRQagabvHgT56DhXnIeAb0UPk
        pMgArLsI+Hv0ECrK+U3bVX8F4L6KDUDTdo8A50bPoWI8Anw1eojcFBuAdefjBR1azrlN290WPURuig5A
        03Z7gY9Hz6Hs/QM4K3qIHBUdAICm7S4DfhI9h7L2SU/8eXrFB2DdmcDd0UMoS79s2u6n0UPkahYBaNru
        duB0vGegnux24MPRQ+RsFgEAaNruUuCb0XMoG48CH2ja7t/Rg+RsNgFY92ngmughlIXPN233u+ghcjer
        ADRt9zDwHuCv0bMo1MV4puhSDooeIIVx6I8ArgQOjZ5Fk7sUeJ/n+y9nlgEAGIf+aBZ3D3pp9CyazJXA
        O5u22xM9SClm9RZgX03bXQu8BR8mUosdwElu/s2ZbQAAmrb7E4sI3BQ9i5L6AfDupu2qf9bfZs06AABN
        2/0NeCt+OjBHa8CXgdPXLw7TJs32bwD7G4d+C4vzwT9DRf/uGbsHOKNpu+3Rg5Ssuo0wDv17gQuBV0TP
        omdtF/D+pu1ujR6kdLN/C7C/pu1+AbwB2BY9izbtfhYnex3v5l+N6n4D2Nc49CcA5wFHRc+iDV0KfMxr
        +ler6gAAjEP/QuAMFj9ZDg8eR0+1A/hS03Y7oweZo+oD8IRx6J8PnAp8FjgyeBzB5cAXmra7OnqQOTMA
        +xmH/mDgeBaXF58KHBI7UVVuA34IfK9pO8/dmIABOIBx6F8EnAy8C3gbcFjsRLPzGHAdiwd1/hy4umk7
        7+kwIQOwCePQvxZogDcCr2PxVuEw/H9cxsMsHuZy4/rXH4CdTdvtDp2qcr5wn6P13xIOBV4GvGSfr5qt
        sbhF230sPrq7F7izabvHQqeSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEnKRJKbgo5DfxzwqhRr
        SwW4umm726OHWMaWROueCZySaG0pd1uBIh5bXt3TgSX9nwGQKmYApIoZAKliBkCqmAGQKmYApIoZAKli
        BkCqmAGQKmYApIoZAKliBkCqmAGQKmYApIoZAKliBkCqmAGQKmYApIoZAEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJOkA/guY+43en0lhQgAAAABJRU5ErkJggg==
</value>
  </data>
</root>